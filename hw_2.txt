1 уровень сложности: 1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)? -- 
git checkout "filename" (откат к последней версии)


2.Как вернуть файл из индекса в рабочий каталог? -- 
git restore --staged "filename" (возвращает файл в рабочее пространство) git reset тоже работает


3.Как отменить ошибочный commit ? -- 
git commit --amend -m"new comment" исправляет комментарий 
git add "filename" --> git commit --amend -m"" в случае, если в коммит не был включён необходимый файл
Git reset HEAD~N(commit's count) откатывает и возвращает в рабочую директорию файлы. Можно исправить. Инфа не потеряна.



4.Как исправить коммит отправленный на сервер GitHub?--
Git revert HEAD~N не портит историю, создаёт новый зеркальный коммит.
Git reset  вызовет конфликт историй для всех вовлечённых!


5.Как создать новую ветку и переключится в нее?--

Git branch "branch name"  команда создаёт ветку
Git checkout "branch name" переключится на ветку

6.В чем отличение между fast-forward merge  and non fast-forfard merge?--
fast-forward когда, к примеру, на дополнительной ветке было Н-ое количество комитов, а на ветке Мейн не было совсем то при слиянии указатель HEAD просто переместится на последний коммит дополнительной ветки. Для ветки Мейн история будет выглядеть линейно.
fast-forfard merge когда на обоих ветках происходили изменения и коммиты.


7.Когда может возникнуть конфликт слияния веток, как  его разрешить?
При работе в одном файле из разных веток. Конфликт решается вручную проверив. В файле будут присутствовать метки какие изменения из какой ветки были произведены. Потом произвести коммит.


8.Можно ли удалить ветку? Как? --
Git branch -d "branch name"

В ответах на вопросы 1-4, 7 необходимо указать конкретные команда git. 
На 5 и 6 вопросы дать объяснение своими словами.